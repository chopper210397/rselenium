# DATA2 TIENE EL FORMATO QUE SE CARGARIA AL SQL
data2<-data %>%
select(FUENTE,periodo,Nro.Doc,Fecha,Ruc,ELIMINAR,Cliente,Condición,Artículo,Cant,Subtotal,DSCZONA,Zona,Vendedor,ppuni,ppsol,flag,dpto,dist,prov)
# con esto leo el maestro lansier con el cual cruzare mi data
maestrolansier <- read_xlsx("maestrolansier.xlsx")
# aqui selecciono lo que voy a cruzar
# df1<-data2 %>% select(Articulo)
df2<-maestrolansier %>% select(METRONIC,`artdsc VALID`,TIPO,equipo)
# con esto quito los espacios adelante y detrÃ¡s del artdesvalid Y LOS ARTICULOS
# df1$ArtÃ­culo<-trimws(df1$ArtÃ­culo,"b")
# df2$ArtÃ­culo<-trimws(df2$ArtÃ­culo,"b")
# df2$artdesvalidvalid<-trimws(df2$artdesvalidvalid,"b")
# cambio el nombre a df2 para que coincida el nombre de la columna articulo para poder hacer el merge
colnames(df2)<-c("Artículo","artdesvalid","tipo","equipo")
# # probando el mismo proceso pero directamente para data 2 y ya no para df1
data2$Artículo<-trimws(data2$Artículo,"b")
data2$Artículo<-trimws(data2$Artículo,"b")
df2$artdesvalid<-trimws(df2$artdesvalid,"b")
# cruzando para obtener los validados, tipo y equipo
# probando si hay productos diferentes
productosnuevosmetronic<-data2[!data2$Artículo %in% df2$Artículo,]
write_xlsx(productosnuevosmetronic,"productosnuevosmetronic.xlsx")
#
ArtdesValid2<-merge(x = data2, y = df2, by.x = "Artículo", all.x = TRUE)
data3<-ArtdesValid2 %>%
select(FUENTE,periodo,Nro.Doc,Fecha,Ruc,ELIMINAR,Cliente,Condición,Artículo,artdesvalid,Cant,Subtotal,DSCZONA,Zona,Vendedor,tipo,equipo,ppuni,ppsol,flag,dpto,dist,prov)
# conectando a ventalansier
sqluis<-odbcConnect("SQLuis",uid = "sa",pwd = "Comercial.2020")
paste0("delete from Venta_Lansier where periodo='01/",
ifelse(month(today())<10,paste0(0,month(today())),month(today())),
"/",year(today()),"'")
paste0("delete from Venta_Lansier where periodo='01/",
ifelse(month(today())<10,paste0(0,month(today())),month(today())),
"/",year(today()),"and fuente ='METRONIC'","'")
paste0("delete from Venta_Lansier where periodo='01/",
ifelse(month(today())<10,paste0(0,month(today())),month(today())),
"/",year(today()),"'","and fuente ='METRONIC'")
# agregando la data de dimexa de este periodo al sql
sqlSave(sqluis,data3,tablename = "Venta_Lansier",rownames = FALSE,append = TRUE,fast =FALSE)
data3 %>% mutate(categorización="")
data3<-data3 %>% mutate(categorización="")
View(data3)
# agregando la data de METRONIC de este periodo al sql
sqlSave(sqluis,data3,tablename = "Venta_Lansier",rownames = FALSE,append = TRUE,fast =FALSE)
# paquetes utilizados
library(RODBC)
library(dplyr)
library(lubridate)
library(writexl)
library(readxl)
# conexion al sql
sqlcomercial<-odbcConnect("SQLansier",uid = "lv",pwd = "lv.2014c")
# trayendo la data de los dos ultimos años de lansier
lansier<-sqlQuery(sqlcomercial,"[dbo].[STARSOFT_LISTA_VENTAS]")
# summary(lansier)
# unique(lansier$Periodo)
# unique(lansier$TipoCl)
# unique(lansier$artdes)
# unique(lansier$clienom)
# unique(lansier$DscZona)
# unique(lansier$dscven)
# unique(lansier$ColorEqui)
# unique(lansier$Fecha)
# nos quedamos solo con el periodo actual
lansier<-lansier %>% filter(Periodo==max(lansier$Periodo))
# summary(lansier)
# unique(lansier$Periodo)
# unique(lansier$TipoCl)
# unique(lansier$artdes)
# unique(lansier$clienom)
# unique(lansier$DscZona)
# unique(lansier$dscven)
# unique(lansier$ColorEqui)
# unique(lansier$Fecha)
# nos quedamos solo con el periodo actual
lansier<-lansier %>% filter(Periodo==max(lansier$Periodo))
# quitamos espacios delante y detras al artdes
lansier$artdes<-trimws(lansier$artdes,which = "both")
# quitamos los dobles espacios que hay entre palabras
lansier$artdes<-gsub("\\s+"," ",lansier$artdes)
# quitamos los simbolos feos producidos por las tildes y las convertimos a tildes nuevamente
lansier$artdes<-iconv(lansier$artdes,from = "UTF-8",to = "latin1")
lansier$clienom<-iconv(lansier$clienom,from = "UTF-8",to = "latin1")
lansier$dscven<-iconv(lansier$dscven,from = "UTF-8",to = "latin1")
# cambiamos el formato de la fecha para que no aparezcan las horas
lansier$Fecha<-paste0(ifelse(day(lansier$Fecha)<10,paste0(0,day(lansier$Fecha)),day(lansier$Fecha)),
"/",
ifelse(month(lansier$Fecha)<10,paste0(0,month(lansier$Fecha)),month(lansier$Fecha))  ,
"/",
year(lansier$Fecha))
#----------------- PAUL VENTAS CARPETA COMPARTIDA ----------------#
# eliminamos del tipocl aquellas que son vacías
paulventas<-lansier %>% filter(TipoCl!=" ")
write_xlsx(paulventas,"paulventas.xlsx")
#------------------------ DASHBOARD-LANSIER ----------------------#
# para el dashboard solo nos interesa el canal privado
lansier<-lansier %>% filter(TipoCl=="DISTRIBUIDORES")
# eliminar productos covid "NOXAL 6 MG/ML X 10ML SOLUCIÃ“N ORAL GOTAS"
lansier<-lansier %>% filter(artdes!="NOXAL 6 MG/ML X 10ML SOLUCIÓN ORAL GOTAS")
# cruzando data
lansier<-lansier %>% mutate(FUENTE="LANSIER")
# CREANDO PERIODO PARA ESTE MES
lansier<-lansier %>% mutate(periodo=paste0("01/",
ifelse(month(today())<10,paste0("0",month(today())),month(today())),
"/",
year(today())))
# insertando columna ELIMINAR en vacio
lansier<-lansier %>% mutate(ELIMINAR="")
# creando columna DSCZONA
lansier<-lansier %>% mutate(DSCVEND="")
# creando ppuni ppsol flag dpto dist prov que estaran vacias
lansier<-lansier %>% mutate(ppuni="") %>% mutate(ppsol="") %>% mutate(flag="")
lansier<-lansier %>%
select(FUENTE,periodo,IdFactura,Fecha,codclie,ELIMINAR,
clienom,tipoCondi,artdes,
Cant,SubTotal,DscZona,dscven,ppuni,ppsol,flag)
# identificando donde marcar con E en ELIMINAR
castillo<-which(lansier$clienom== "REPRESENTACIONES CASTILLO S. A.", arr.ind=TRUE)
mym<-which(lansier$clienom== "M & M  PROD. MED. Y FARMACEUTICOS  E.I.R.L", arr.ind=TRUE)
difarlib<-which(lansier$clienom== "DISTRIB. FARMACEUTICA LA LIBERTAD S.R.L.", arr.ind=TRUE)
# marcando con E
lansier$ELIMINAR[castillo]="E"
lansier$ELIMINAR[mym]="E"
lansier$ELIMINAR[difarlib]="E"
# LEYENDO DATA NECESARIA PARA VALIDAR
maestrolansier <- read_xlsx("maestrolansier.xlsx")
# selecciono solo lo que voy a querer de maestro lansier que para este caso seria DIMEXA artdesvalid tipo y equipo
df2<-maestrolansier %>% select(LANSIER,`artdsc VALID`,TIPO,equipo)
# cambio el nombre a df2 para que coincida el nombre de la columna articulo para poder hacer el merge
colnames(df2)<-c("artdes","artdesvalid","tipo","equipo")
# QUITO ESPACIOS DELANTE Y DETRAS DEL MAESTROLANSIER
df2$artdes<-trimws(df2$artdes,"b")
df2$artdesvalid<-trimws(df2$artdesvalid,"b")
# antes de cruzar debemos validar que esten los mismo productos y cuales no reconoce
productosnuevoslansier<-lansier[!lansier$artdes %in% df2$artdes,]
View(productosnuevoslansier)
write_xlsx(productosnuevoslansier,"productosnuevoslansier.xlsx")
# son productos de lansier
# EN UN INICIO data_maestro daba un numero diferente de filas a lansier y esto era porque en el maestrolansier habian nombres que se repetian
# no pueden repetirse nombre o al cruzar duplicará esas observaciones
data_maestro<-merge(x = lansier, y = df2, by.x = "artdes", all.x = TRUE)
# ahora cruzando con vendedores
vendedoresdimexa<-read_xlsx("vendedoresdimexa.xlsx")
vendedoresdimexa<-vendedoresdimexa %>% select(ruc,flag)
colnames(vendedoresdimexa)<-c("codclie","DSCVEND")
# quitando los espacios en blanco delante y detras
data_maestro$codclie<-trimws(data_maestro$codclie,"b")
vendedoresdimexa$codclie<-trimws(vendedoresdimexa$codclie,"b")
# combinando y validando con la data de vendedoresdimexa para traer el dscvend o flag como esta en vendedoresdimexa
data_maestro_vendedores<-merge(data_maestro,vendedoresdimexa,by.x = "codclie",all.x = TRUE)
# dandole orden a nuestro excel
data_maestro_vendedores<-data_maestro_vendedores %>%
select(FUENTE,periodo,IdFactura,Fecha,codclie,ELIMINAR,
clienom,tipoCondi,artdes,artdesvalid,
Cant,SubTotal,DSCVEND,DscZona,dscven,tipo,equipo,ppuni,ppsol,flag)
# eliminamos las filas que tienen subtotal igual a cero
zerosubtotal<-which(data_maestro_vendedores$SubTotal== 0, arr.ind=TRUE)
data_maestro_vendedores<-data_maestro_vendedores[-zerosubtotal,]
write_xlsx(data_maestro_vendedores,"lansierdashboard.xlsx")
# limpiando nuestra ventana
rm(list=ls())
library(qdapTools)
library(plyr)
library(lookup)
library(XLConnect)
library(dplyr)
library(readxl)
library(writexl)
library(RODBC)
data <- readWorksheetFromFile(paste0("C:\\Users\\LBarrios\\Downloads\\FacMet_",
year(today()),
ifelse(month(today())<10,paste0("0",month(today())),month(today())) ,
ifelse(day(today())<10,paste0("0",day(today())),day(today())),".xls"),
sheet = "FacturacionMetronic",
startRow = 6,
startCol = 1)
# retirando las columnas que eran merge de las otras
data<-data %>% select(-Col6,-Col12)
# seleccionando data para CIERRE DE MES ANTERIOR
# data<-data %>% filter(Periodo==paste0(year(today()),
#                                       ifelse(month(today())<10,paste0("0",month(today())-1),month(today()))))
# seleccionando data del periodo ACTUAL
data<-data %>% filter(Periodo==paste0(year(today()),
ifelse(month(today())<10,paste0("0",month(today())),month(today()))))
# borrando los valores de articulo iguales a productos covid
data<-data %>% filter(!(Artículo %in%
c("VESOGVT001","VESOGVT002","VESOTR001","VESOTR002","VESOTR003","VESOTR004","VEDMLN001")))
# borrando de columna Vendedor = OFICINA
data<-data %>% filter(!(Vendedor %in% c("OFICINA")))
# creando columna fuente que diga METRONIC
data<-data %>% mutate(FUENTE="METRONIC")
# creando columna periodo con el primer dia del mes a actualizar
data<-data %>% mutate(periodo=paste0("01/",
ifelse(month(today())<10,paste0("0",month(today())),month(today())),
"/",year(today())))
# insertando columna ELIMINAR en vacio
data<-data %>% mutate(ELIMINAR="")
# creando columna DSCZONA
data<-data %>% mutate(DSCZONA="")
# creando ppuni ppsol flag dpto dist prov que estaran vacias
data<-data %>% mutate(ppuni="") %>% mutate(ppsol="") %>% mutate(flag="") %>% mutate(dpto="") %>% mutate(dist="") %>% mutate(prov="")
# seleccionando solo las columnas que nos interesan
# DATA2 TIENE EL FORMATO QUE SE CARGARIA AL SQL
data2<-data %>%
select(FUENTE,periodo,Nro.Doc,Fecha,Ruc,ELIMINAR,Cliente,Condición,Artículo,Cant,Subtotal,DSCZONA,Zona,Vendedor,ppuni,ppsol,flag,dpto,dist,prov)
# con esto leo el maestro lansier con el cual cruzare mi data
maestrolansier <- read_xlsx("maestrolansier.xlsx")
# aqui selecciono lo que voy a cruzar
# df1<-data2 %>% select(Articulo)
df2<-maestrolansier %>% select(METRONIC,`artdsc VALID`,TIPO,equipo)
# con esto quito los espacios adelante y detrÃ¡s del artdesvalid Y LOS ARTICULOS
# df1$ArtÃ­culo<-trimws(df1$ArtÃ­culo,"b")
# df2$ArtÃ­culo<-trimws(df2$ArtÃ­culo,"b")
# df2$artdesvalidvalid<-trimws(df2$artdesvalidvalid,"b")
# cambio el nombre a df2 para que coincida el nombre de la columna articulo para poder hacer el merge
colnames(df2)<-c("Artículo","artdesvalid","tipo","equipo")
# # probando el mismo proceso pero directamente para data 2 y ya no para df1
data2$Artículo<-trimws(data2$Artículo,"b")
data2$Artículo<-trimws(data2$Artículo,"b")
df2$artdesvalid<-trimws(df2$artdesvalid,"b")
# cruzando para obtener los validados, tipo y equipo
# probando si hay productos diferentes
productosnuevosmetronic<-data2[!data2$Artículo %in% df2$Artículo,]
write_xlsx(productosnuevosmetronic,"productosnuevosmetronic.xlsx")
#
ArtdesValid2<-merge(x = data2, y = df2, by.x = "Artículo", all.x = TRUE)
data3<-ArtdesValid2 %>%
select(FUENTE,periodo,Nro.Doc,Fecha,Ruc,ELIMINAR,Cliente,Condición,Artículo,artdesvalid,Cant,Subtotal,DSCZONA,Zona,Vendedor,tipo,equipo,ppuni,ppsol,flag,dpto,dist,prov)
# creando el excel con la data ya formateada
# es fundamental utilizar la funcion write_xlsx ya que esta nos permite sobre escribir el excel sin tener que borrarlo previamente
write_xlsx(data3,"metronic.xlsx")
# LISTO TERMINADO
#------------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------#
# ------------ con trimws puedo quitar los espacios iniciales y finales de un texto --------- #
#---------------------------------------------------------------------------------------------#
# x<- "  texto con espacios "
# trimws(x,"b")
# x<-c(" asds ", " asdasdas","sdasdas ","    asdasd  asd   asd    ","  asdsa  2  ")
# trimws(x,"b")
rm(list = ls())
Sys.sleep(3)
data <- readWorksheetFromFile(paste0("C:\\Users\\LBarrios\\Downloads\\FacMet_",
year(today()),
ifelse(month(today())<10,paste0("0",month(today())),month(today())) ,
ifelse(day(today())<10,paste0("0",day(today())),day(today())),".xls"),
sheet = "FacturacionMetronic",
startRow = 6,
startCol = 1)
# retirando las columnas que eran merge de las otras
data<-data %>% select(-Col6,-Col12)
# seleccionando data para CIERRE DE MES ANTERIOR
# data<-data %>% filter(Periodo==paste0(year(today()),
#                                       ifelse(month(today())<10,paste0("0",month(today())-1),month(today()))))
# seleccionando data del periodo ACTUAL
data<-data %>% filter(Periodo==paste0(year(today()),
ifelse(month(today())<10,paste0("0",month(today())),month(today()))))
# borrando los valores de articulo iguales a productos covid
data<-data %>% filter(!(Artículo %in%
c("VESOGVT001","VESOGVT002","VESOTR001","VESOTR002","VESOTR003","VESOTR004","VEDMLN001")))
# borrando de columna Vendedor = OFICINA
data<-data %>% filter(!(Vendedor %in% c("OFICINA")))
# creando columna fuente que diga METRONIC
data<-data %>% mutate(FUENTE="METRONIC")
# creando columna periodo con el primer dia del mes a actualizar
data<-data %>% mutate(periodo=paste0("01/",
ifelse(month(today())<10,paste0("0",month(today())),month(today())),
"/",year(today())))
# insertando columna ELIMINAR en vacio
data<-data %>% mutate(ELIMINAR="")
# creando columna DSCZONA
data<-data %>% mutate(DSCZONA="")
# creando ppuni ppsol flag dpto dist prov que estaran vacias
data<-data %>% mutate(ppuni="") %>% mutate(ppsol="") %>% mutate(flag="") %>% mutate(dpto="") %>% mutate(dist="") %>% mutate(prov="")
# seleccionando solo las columnas que nos interesan
# DATA2 TIENE EL FORMATO QUE SE CARGARIA AL SQL
data2<-data %>%
select(FUENTE,periodo,Nro.Doc,Fecha,Ruc,ELIMINAR,Cliente,Condición,Artículo,Cant,Subtotal,DSCZONA,Zona,Vendedor,ppuni,ppsol,flag,dpto,dist,prov)
# con esto leo el maestro lansier con el cual cruzare mi data
maestrolansier <- read_xlsx("maestrolansier.xlsx")
# aqui selecciono lo que voy a cruzar
# df1<-data2 %>% select(Articulo)
df2<-maestrolansier %>% select(METRONIC,`artdsc VALID`,TIPO,equipo)
# con esto quito los espacios adelante y detrÃ¡s del artdesvalid Y LOS ARTICULOS
# df1$ArtÃ­culo<-trimws(df1$ArtÃ­culo,"b")
# df2$ArtÃ­culo<-trimws(df2$ArtÃ­culo,"b")
# df2$artdesvalidvalid<-trimws(df2$artdesvalidvalid,"b")
# cambio el nombre a df2 para que coincida el nombre de la columna articulo para poder hacer el merge
colnames(df2)<-c("Artículo","artdesvalid","tipo","equipo")
# # probando el mismo proceso pero directamente para data 2 y ya no para df1
data2$Artículo<-trimws(data2$Artículo,"b")
data2$Artículo<-trimws(data2$Artículo,"b")
df2$artdesvalid<-trimws(df2$artdesvalid,"b")
# cruzando para obtener los validados, tipo y equipo
# probando si hay productos diferentes
productosnuevosmetronic<-data2[!data2$Artículo %in% df2$Artículo,]
write_xlsx(productosnuevosmetronic,"productosnuevosmetronic.xlsx")
#
ArtdesValid2<-merge(x = data2, y = df2, by.x = "Artículo", all.x = TRUE)
data3<-ArtdesValid2 %>%
select(FUENTE,periodo,Nro.Doc,Fecha,Ruc,ELIMINAR,Cliente,Condición,Artículo,artdesvalid,Cant,Subtotal,DSCZONA,Zona,Vendedor,tipo,equipo,ppuni,ppsol,flag,dpto,dist,prov)
# creando el excel con la data ya formateada
# es fundamental utilizar la funcion write_xlsx ya que esta nos permite sobre escribir el excel sin tener que borrarlo previamente
write_xlsx(data3,"metronic.xlsx")
# LISTO TERMINADO
#------------------------------------------------------------------------------------------------------
#-------
data3<-data3 %>% mutate(categorización="")
# conectando a ventalansier
sqluis<-odbcConnect("SQLuis",uid = "sa",pwd = "Comercial.2020")
# agregando la data de METRONIC de este periodo al sql
sqlSave(sqluis,data3,tablename = "Venta_Lansier",rownames = FALSE,append = TRUE,fast =FALSE)
columnTypes <- list(fuente = "VARCHAR(50)", periodo = "date", idfactura = "VARCHAR(50)", fecha = "date", ruc = "varchar(11)",
eliminar ="char(1)",clienom="varchar(150)",tipocondi="varchar(10)",artdes="varchar(150)",artdesValid="varchar(150)",
dsczonadet="varchar(8)", dsczona="varchar(30)",dscven="varchar(60)", tipoart="varchar(5)", colorequi="varchar(15)",
ppuni="int",ppsol="float",flag="char(1)",dpto="varchar(50)", distrito="varchar(50)",provincia="varchar(50)",
categorización="varchar(20)")
# agregando la data de METRONIC de este periodo al sql
sqlSave(sqluis,data3,tablename = "Venta_Lansier",rownames = FALSE,append = TRUE,fast =FALSE, varTypes=columnTypes)
columnTypes <- list(fuente = "VARCHAR(50)", periodo = "date", idfactura = "VARCHAR(50)", fecha = "date", ruc = "varchar(11)",
eliminar ="char(1)",clienom="varchar(150)",tipocondi="varchar(10)",artdes="varchar(150)",artdesValid="varchar(150)",
dsczonadet="varchar(8)", dsczona="varchar(30)",dscven="varchar(60)", tipoart="varchar(5)", colorequi="varchar(15)",
ppuni="int",ppsol="float",flag="char(1)",dpto="varchar(50)", distrito="varchar(50)",provincia="varchar(50)",
categorización="varchar(20)")
# agregando la data de METRONIC de este periodo al sql
sqlSave(sqluis,data3,tablename = "Venta_Lansier",rownames = FALSE,append = TRUE,fast =FALSE, varTypes=columnTypes)
# agregando la data de METRONIC de este periodo al sql
sqlSave(sqluis,data3,tablename = "Venta_Lansier",rownames = FALSE,verbose = TRUE,append = TRUE,fast =FALSE, varTypes=columnTypes)
colnames(data3)
colnames(data3)=
columnTypes <- list(fuente = "VARCHAR(50)", periodo = "date", idfactura = "VARCHAR(50)", fecha = "date", ruc = "varchar(11)",
eliminar ="char(1)",clienom="varchar(150)",tipocondi="varchar(10)",artdes="varchar(150)",artdesValid="varchar(150)",
dsczonadet="varchar(8)", dsczona="varchar(30)",dscven="varchar(60)", tipoart="varchar(5)", colorequi="varchar(15)",
ppuni="int",ppsol="float",flag="char(1)",dpto="varchar(50)", distrito="varchar(50)",provincia="varchar(50)",
categorización="varchar(20)")
colnames(data3)
colnames(data3)<-c("fuente","periodo","idfactura","fecha","ruc","eliminar","clienom","tipocondi","artdes","artdesValid","dsczonadet","dsczona",
"dscven","tipoart","colorequi","ppuni","ppsol","flag","dpto","distrito","provincia","categorización")
colnames(data3)
columnTypes <- list(fuente = "VARCHAR(50)", periodo = "date", idfactura = "VARCHAR(50)", fecha = "date", ruc = "varchar(11)",
eliminar ="char(1)",clienom="varchar(150)",tipocondi="varchar(10)",artdes="varchar(150)",artdesValid="varchar(150)",
dsczonadet="varchar(8)", dsczona="varchar(30)",dscven="varchar(60)", tipoart="varchar(5)", colorequi="varchar(15)",
ppuni="int",ppsol="float",flag="char(1)",dpto="varchar(50)", distrito="varchar(50)",provincia="varchar(50)",
categorización="varchar(20)")
colnames(data3)
# agregando la data de METRONIC de este periodo al sql
sqlSave(sqluis,data3,tablename = "Venta_Lansier",rownames = FALSE,verbose = TRUE,append = TRUE,fast =FALSE, varTypes=columnTypes)
# agregando la data de METRONIC de este periodo al sql
sqlSave(sqluis,data3,tablename = "Venta_Lansier",rownames = FALSE,verbose = TRUE,append = TRUE,fast =FALSE, varTypes=columnTypes)
View(data3)
str(data3)
View(data3)
colnames(data3)<-c("fuente","periodo","idfactura","fecha","ruc","eliminar","clienom","tipocondi","artdes","artdesValid","cant","subtotal","dsczonadet","dsczona",
"dscven","tipoart","colorequi","ppuni","ppsol","flag","dpto","distrito","provincia","categorización")
str(data3)
columnTypes <- list(fuente = "VARCHAR(50)", periodo = "date", idfactura = "VARCHAR(50)", fecha = "date", ruc = "varchar(11)",
eliminar ="char(1)",clienom="varchar(150)",tipocondi="varchar(10)",artdes="varchar(150)",artdesValid="varchar(150)",cant="int",
subtotal="float",dsczonadet="varchar(8)", dsczona="varchar(30)",dscven="varchar(60)", tipoart="varchar(5)",
colorequi="varchar(15)",ppuni="int",ppsol="float",flag="char(1)",dpto="varchar(50)", distrito="varchar(50)",provincia="varchar(50)",
categorización="varchar(20)")
colnames(data3)<-c("fuente","periodo","idfactura","fecha","ruc","eliminar","clienom","tipocondi","artdes","artdesValid","cant","subtotal","dsczonadet","dsczona",
"dscven","tipoart","colorequi","ppuni","ppsol","flag","dpto","distrito","provincia","categorización")
str(data3)
# agregando la data de METRONIC de este periodo al sql
sqlSave(sqluis,data3,tablename = "Venta_Lansier",rownames = FALSE,verbose = TRUE,append = TRUE,fast =FALSE, varTypes=columnTypes)
# agregando la data de METRONIC de este periodo al sql
sqlSave(sqluis,data3,tablename = "Venta_Lansier",colnames = FALSE,rownames = FALSE,verbose = TRUE,append = TRUE,fast =FALSE, varTypes=columnTypes)
columnTypes <- list(fuente = "VARCHAR(50)", periodo = "date", idfactura = "VARCHAR(50)", fecha = "date", ruc = "varchar(11)",
eliminar ="char(1)",clienom="varchar(150)",tipocondi="varchar(10)",artdes="varchar(150)",artdesValid="varchar(150)",cant="int",
subtotal="float",dsczonadet="varchar(8)", dsczona="varchar(30)",dscven="varchar(60)", tipoart="varchar(5)",
colorequi="varchar(15)",ppuni="float",ppsol="float",flag="char(1)",dpto="varchar(50)", distrito="varchar(50)",provincia="varchar(50)",
categorización="varchar(20)")
# agregando la data de METRONIC de este periodo al sql
sqlSave(sqluis,data3,tablename = "Venta_Lansier",colnames = FALSE,rownames = FALSE,verbose = TRUE,append = TRUE,fast =FALSE, varTypes=columnTypes)
columnTypes <- list(fuente = "VARCHAR(50)", periodo = "date", idfactura = "VARCHAR(50)", fecha = "date", ruc = "varchar(11)",
eliminar ="char(1)",clienom="varchar(150)",tipocondi="varchar(10)",artdes="varchar(150)",artdesValid="varchar(150)",cant="int",
subtotal="float",dsczonadet="varchar(8)", dsczona="varchar(30)",dscven="varchar(60)", tipoart="varchar(5)",
colorequi="varchar(15)",ppuni="varchar(50)",ppsol="varchar(50)",flag="char(1)",dpto="varchar(50)", distrito="varchar(50)",provincia="varchar(50)",
categorización="varchar(20)")
colnames(data3)<-c("fuente","periodo","idfactura","fecha","ruc","eliminar","clienom","tipocondi","artdes","artdesValid","cant","subtotal","dsczonadet","dsczona",
"dscven","tipoart","colorequi","ppuni","ppsol","flag","dpto","distrito","provincia","categorización")
# agregando la data de METRONIC de este periodo al sql
sqlSave(sqluis,data3,tablename = "Venta_Lansier",colnames = FALSE,rownames = FALSE,verbose = TRUE,append = TRUE,fast =FALSE, varTypes=columnTypes)
columnTypes <- list(fuente = "VARCHAR(50)", periodo = "date", idfactura = "VARCHAR(50)", fecha = "date", ruc = "varchar(11)",
eliminar ="char(1)",clienom="varchar(150)",tipocondi="varchar(10)",artdes="varchar(150)",artdesValid="varchar(150)",cant="int",
subtotal="float",dsczonadet="varchar(8)", dsczona="varchar(30)",dscven="varchar(60)", tipoart="varchar(5)",
colorequi="varchar(15)",ppuni="int",ppsol="float",flag="char(1)",dpto="varchar(50)", distrito="varchar(50)",provincia="varchar(50)",
categorización="varchar(20)")
# agregando la data de METRONIC de este periodo al sql
sqlSave(sqluis,data3,tablename = "Venta_Lansier",colnames = FALSE,rownames = FALSE,verbose = TRUE,append = TRUE,fast =FALSE, varTypes=columnTypes)
columnTypes <- list(fuente = "VARCHAR(50)", periodo = "date", idfactura = "VARCHAR(50)", fecha = "date", ruc = "varchar(11)",
eliminar ="char(1)",clienom="varchar(150)",tipocondi="varchar(10)",artdes="varchar(150)",artdesValid="varchar(150)",cant="int",
subtotal="float",dsczonadet="varchar(8)", dsczona="varchar(30)",dscven="varchar(60)", tipoart="varchar(5)",
colorequi="varchar(15)",ppuni="int",ppsol="float",flag="char(1)",dpto="varchar(50)", distrito="varchar(50)",provincia="varchar(50)",
categorización="varchar(20)")
colnames(data3)<-c("fuente","periodo","idfactura","fecha","ruc","eliminar","clienom","tipocondi","artdes","artdesValid","cant","subtotal","dsczonadet","dsczona",
"dscven","tipoart","colorequi","ppuni","ppsol","flag","dpto","distrito","provincia","categorización")
# agregando la data de METRONIC de este periodo al sql
sqlSave(sqluis,data3,tablename = "Venta_Lansier",colnames = FALSE,rownames = FALSE,verbose = TRUE,append = TRUE,fast =TRUE, varTypes=columnTypes)
# paquetes utilizados
library(RODBC)
library(dplyr)
library(lubridate)
library(writexl)
library(readxl)
# conexion al sql
sqlcomercial<-odbcConnect("SQLansier",uid = "lv",pwd = "lv.2014c")
# trayendo la data de los dos ultimos años de lansier
lansier<-sqlQuery(sqlcomercial,"[dbo].[STARSOFT_LISTA_VENTAS]")
# str(lansier)
# summary(lansier)
# unique(lansier$Periodo)
# unique(lansier$TipoCl)
# unique(lansier$artdes)
# unique(lansier$clienom)
# unique(lansier$DscZona)
# unique(lansier$dscven)
# unique(lansier$ColorEqui)
# unique(lansier$Fecha)
# nos quedamos solo con el periodo actual
lansier<-lansier %>% filter(Periodo==max(lansier$Periodo))
# para cerrar el periodo del mes anterior hacer el siguiente código, escogemos el [2], porque ese será el periodo anterior al actual
# lansier<-lansier %>% filter(Periodo== unique(lansier$Periodo)[2])
# quitamos espacios delante y detras al artdes
lansier$artdes<-trimws(lansier$artdes,which = "both")
# quitamos los dobles espacios que hay entre palabras
lansier$artdes<-gsub("\\s+"," ",lansier$artdes)
# quitamos los simbolos feos producidos por las tildes y las convertimos a tildes nuevamente
lansier$artdes<-iconv(lansier$artdes,from = "UTF-8",to = "latin1")
lansier$clienom<-iconv(lansier$clienom,from = "UTF-8",to = "latin1")
lansier$dscven<-iconv(lansier$dscven,from = "UTF-8",to = "latin1")
# cambiamos el formato de la fecha para que no aparezcan las horas
lansier$Fecha<-paste0(ifelse(day(lansier$Fecha)<10,paste0(0,day(lansier$Fecha)),day(lansier$Fecha)),
"/",
ifelse(month(lansier$Fecha)<10,paste0(0,month(lansier$Fecha)),month(lansier$Fecha))  ,
"/",
year(lansier$Fecha))
#----------------- PAUL VENTAS CARPETA COMPARTIDA ----------------#
# eliminamos del tipocl aquellas que son vacías
paulventas<-lansier %>% filter(TipoCl!=" ")
write_xlsx(paulventas,"paulventas.xlsx")
#------------------------ DASHBOARD-LANSIER ----------------------#
# para el dashboard solo nos interesa el canal privado
lansier<-lansier %>% filter(TipoCl=="DISTRIBUIDORES")
# eliminar productos covid "NOXAL 6 MG/ML X 10ML SOLUCIÃ“N ORAL GOTAS"
lansier<-lansier %>% filter(artdes!="NOXAL 6 MG/ML X 10ML SOLUCIÓN ORAL GOTAS")
# cruzando data
lansier<-lansier %>% mutate(FUENTE="LANSIER")
# CREANDO PERIODO PARA ESTE MES
lansier<-lansier %>% mutate(periodo=paste0("01/",
ifelse(month(today())<10,paste0("0",month(today())),month(today())),
"/",
year(today())))
# CREANDO PERIODO PARA MES ANTERIOR
# lansier<-lansier %>% mutate(periodo=paste0("01/",
#                                            ifelse(month(today())<10,paste0("0",month(today())-1),month(today())-1),
#                                            "/",
#                                            year(today())))
# insertando columna ELIMINAR en vacio
lansier<-lansier %>% mutate(ELIMINAR="")
# creando columna DSCZONA
lansier<-lansier %>% mutate(DSCVEND="")
# creando ppuni ppsol flag dpto dist prov que estaran vacias
lansier<-lansier %>% mutate(ppuni="") %>% mutate(ppsol="") %>% mutate(flag="")
lansier<-lansier %>%
select(FUENTE,periodo,IdFactura,Fecha,codclie,ELIMINAR,
clienom,tipoCondi,artdes,
Cant,SubTotal,DscZona,dscven,ppuni,ppsol,flag)
# identificando donde marcar con E en ELIMINAR
castillo<-which(lansier$clienom== "REPRESENTACIONES CASTILLO S. A.", arr.ind=TRUE)
mym<-which(lansier$clienom== "M & M  PROD. MED. Y FARMACEUTICOS  E.I.R.L", arr.ind=TRUE)
difarlib<-which(lansier$clienom== "DISTRIB. FARMACEUTICA LA LIBERTAD S.R.L.", arr.ind=TRUE)
# marcando con E
lansier$ELIMINAR[castillo]="E"
lansier$ELIMINAR[mym]="E"
lansier$ELIMINAR[difarlib]="E"
# LEYENDO DATA NECESARIA PARA VALIDAR
maestrolansier <- read_xlsx("maestrolansier.xlsx")
# selecciono solo lo que voy a querer de maestro lansier que para este caso seria DIMEXA artdesvalid tipo y equipo
df2<-maestrolansier %>% select(LANSIER,`artdsc VALID`,TIPO,equipo)
# cambio el nombre a df2 para que coincida el nombre de la columna articulo para poder hacer el merge
colnames(df2)<-c("artdes","artdesvalid","tipo","equipo")
# QUITO ESPACIOS DELANTE Y DETRAS DEL MAESTROLANSIER
df2$artdes<-trimws(df2$artdes,"b")
df2$artdesvalid<-trimws(df2$artdesvalid,"b")
# antes de cruzar debemos validar que esten los mismo productos y cuales no reconoce
productosnuevoslansier<-lansier[!lansier$artdes %in% df2$artdes,]
write_xlsx(productosnuevoslansier,"productosnuevoslansier.xlsx")
# son productos de lansier
# EN UN INICIO data_maestro daba un numero diferente de filas a lansier y esto era porque en el maestrolansier habian nombres que se repetian
# no pueden repetirse nombre o al cruzar duplicará esas observaciones
data_maestro<-merge(x = lansier, y = df2, by.x = "artdes", all.x = TRUE)
# ahora cruzando con vendedores
vendedoresdimexa<-read_xlsx("vendedoresdimexa.xlsx")
vendedoresdimexa<-vendedoresdimexa %>% select(ruc,flag)
colnames(vendedoresdimexa)<-c("codclie","DSCVEND")
# quitando los espacios en blanco delante y detras
data_maestro$codclie<-trimws(data_maestro$codclie,"b")
vendedoresdimexa$codclie<-trimws(vendedoresdimexa$codclie,"b")
# combinando y validando con la data de vendedoresdimexa para traer el dscvend o flag como esta en vendedoresdimexa
data_maestro_vendedores<-merge(data_maestro,vendedoresdimexa,by.x = "codclie",all.x = TRUE)
# dandole orden a nuestro excel
data_maestro_vendedores<-data_maestro_vendedores %>%
select(FUENTE,periodo,IdFactura,Fecha,codclie,ELIMINAR,
clienom,tipoCondi,artdes,artdesvalid,
Cant,SubTotal,DSCVEND,DscZona,dscven,tipo,equipo,ppuni,ppsol,flag)
# eliminamos las filas que tienen subtotal igual a cero
zerosubtotal<-which(data_maestro_vendedores$SubTotal== 0, arr.ind=TRUE)
data_maestro_vendedores<-data_maestro_vendedores[-zerosubtotal,]
write_xlsx(data_maestro_vendedores,"lansierdashboard.xlsx")
# limpiando nuestra ventana
rm(list=ls())
