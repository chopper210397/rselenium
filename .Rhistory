border = c( "bottom"),
borderStyle = "thin"
)
openxlsx::addStyle(
wb = wb,
sheet = "Preciosminsa",
style = insideBorders,
rows = rangeRows,
cols = rangecols,
gridExpand = TRUE
)
writeData(wb,"Preciosminsa",a,startRow = 1,startCol = 1)
#----------------------------------------------------------------#
#                        PRECIOS PRODUCCIÓN                      #
#----------------------------------------------------------------#
# creando hoja INEI
addWorksheet(
wb = wb,
sheetName = "INEI"
)
# quitando espacios delante y detrás
a$clienom<-trimws(a$clienom,"both")
a$artdes<-trimws(a$artdes,"both")
# SELECCIONANDO SOLO LA CADENA
inei<-a %>% filter(clienom %in% c("BOTICAS Y SALUD S.A.C.","CORPORACION BOTICAS PERU S.A.C.","DROGUERIA INRETAIL PHARMA S.A.C.","INRETAIL PHARMA S.A."))
# seleccionando solo los productos elegidos para el formulario inei
inei<-inei %>% filter(artdes %in% c("BIOTEARS SOL OFT EST x 15ml","COSOMIDOL SOL OFT ESTl x 5ml","FLORIL NF 0,03% SOL OFT EST x 15ml",
"FLORIL NF 0,03% SOL OFT EST x 8ml",
"FRAMIDEX NF SOL OFT EST x 2,5ml","HUMED 0,3% SOL OFT EST x 15ml.","MEGATOB SOL OFT EST x 5ml",
"SYSTALAN SOL OFT EST x 15ml","CLORINCORT - P  UNG OFT EST x 3.5g","TERRAMISOL - A UNG OFT EST x 6g"))
inei<-inei %>% group_by(artdes) %>% summarise(cantidad=sum(Unidades),soles=sum(Soles)) %>% mutate(precio=soles/cantidad)
writeData(wb,"INEI",inei,startRow = 1,startCol = 1)
saveWorkbook(wb,file = paste0("sustentopreciosminsa",meselegido,".xlsx"),TRUE)
View(a)
#-----------------------------------------------------------------#
#                      PRECIOS MINSA                              #
#-----------------------------------------------------------------#
# cargando paquetes
library(readr)
library(readxl)
library(dplyr)
library(tidyr)
library(lubridate)
library(writexl)
# install.packages("openxlsx")
library(openxlsx)
# leyendo paul
datapaul<-read_xlsx("Ventas Lansier 2022 DataPaul.xlsx",sheet = "datapaul",
col_types = c("numeric","numeric","text","numeric","text","text","text","text","text","text",
"numeric","numeric","numeric","numeric","numeric","numeric","text","text","text","text",
"text","numeric","numeric","text","numeric","text","text","text","text","numeric"
,"text","text"))
# datapaul<-read_xlsx("Ventas Lansier 2022 DataPaul.xlsx",sheet = "datapaul")
# seleccionando el periodo del mes anterior para hacer los precios minsa
# datapaul<-datapaul %>% filter(periodo==paste0(substr(today(),0,4) ,ifelse( month(today())-1<10,paste0("0",month(today())-1),month(today())-1 )))
# seleccionando un mes cualquiera a elección, se debe cambiar el "202201" por la fecha deseada, solo escribir y correr ese códigO
# MES QUE DESEAMOS SU SUSTENTO PRECIOS MINSA
# ESCRIBIR EN VEZ DE LA FECHA QUE ESTA AQUI DEBAJO
#------------------------------------------#
meselegido=202107
#------------------------------------------#
datapaul<-datapaul %>% filter(periodo==meselegido)
# seleccionando distribuidores porque es lo unico que nos importa para precios minsa
datapaul<-datapaul %>% filter(tipocl=="DISTRIBUIDORES")
datapaul<-datapaul %>% filter(codart!="NA")
a<-datapaul %>% group_by(codart,artdes,codclie,clienom,idfactura) %>% summarise(Unidades=sum(cant),Soles=sum(subtotal))
a<-a %>% filter(codart!="TEXTO")
# ELIMINANDO PRODUCTOS COVID
a<-a %>% filter(!(codart %in% c("VESOGVT001","VESOGVT002","VESOTR001","VESOTR002","VESOTR003","VESOTR004")))
a<-a %>% filter(clienom!="METRONIC SAC")
a<-a %>% filter(clienom!="Cuota")
# creando el precio
a<-a %>% mutate(Precio=Soles/Unidades)
# redondeando a 3 digitos porque ellos quieren que esté asi
a$Precio<-round(a$Precio,digits = 3)
a$Soles<-round(a$Soles,digits = 3)
# ordenando por artdes
a<-a %>% arrange(artdes,-Precio)
# con esto evitamos que se repitan los clientes por producto
a<-a %>% distinct(codart,.keep_all = TRUE)
# ahora hacer una columna con el mayor, menor y media de precio por producto
maximo<-a %>% group_by(artdes) %>% summarise(Maximo=max(Precio))
minimo<-a %>% group_by(artdes) %>% summarise(Minimo=min(Precio))
promedio<-a %>% group_by(artdes) %>% summarise(Media=mean(Precio))
# uniendo los valores hallados con la data original
a<-merge(a,maximo,by = "artdes",all.x = TRUE)
a<-merge(a,minimo,by = "artdes",all.x = TRUE)
a<-merge(a,promedio,by = "artdes",all.x = TRUE)
# redondeando a 3 digitos los valores hallados
a$Maximo<-round(a$Maximo,digits = 3)
a$Minimo<-round(a$Minimo,digits = 3)
a$Media<-round(a$Media,digits = 3)
# RECORDAR QUE NO DEBEN HABER PRODUCTOS COVID AQUI
# HASTA AQUI GENERAMOS EL FORMATO QUE SIRVE PARA PRECIOS MINSA Y PRECIOS PRODUCCIÓN
# write_xlsx(a,"sustentopreciosminsa.xlsx")
# con esto descubrimos cual es el numero de fila para el primer ejemplar de cada producto
filasbordear<-1
for (i in 1:nrow(maximo)) {
filasbordear[i]<-which(a$artdes %in% maximo$artdes[i] , arr.ind = TRUE)[1]
}
wb <- openxlsx::createWorkbook()
addWorksheet(
wb = wb,
sheetName = "Preciosminsa"
)
rangeRows=filasbordear
rangecols=1:11
insideBorders <- openxlsx::createStyle(
border = c( "bottom"),
borderStyle = "thin"
)
openxlsx::addStyle(
wb = wb,
sheet = "Preciosminsa",
style = insideBorders,
rows = rangeRows,
cols = rangecols,
gridExpand = TRUE
)
writeData(wb,"Preciosminsa",a,startRow = 1,startCol = 1)
#----------------------------------------------------------------#
#                        PRECIOS PRODUCCIÓN                      #
#----------------------------------------------------------------#
# creando hoja INEI
addWorksheet(
wb = wb,
sheetName = "INEI"
)
# quitando espacios delante y detrás
a$clienom<-trimws(a$clienom,"both")
a$artdes<-trimws(a$artdes,"both")
# SELECCIONANDO SOLO LA CADENA
inei<-a %>% filter(clienom %in% c("BOTICAS Y SALUD S.A.C.","CORPORACION BOTICAS PERU S.A.C.","DROGUERIA INRETAIL PHARMA S.A.C.","INRETAIL PHARMA S.A."))
# seleccionando solo los productos elegidos para el formulario inei
inei<-inei %>% filter(artdes %in% c("BIOTEARS SOL OFT EST x 15ml","COSOMIDOL SOL OFT ESTl x 5ml","FLORIL NF 0,03% SOL OFT EST x 15ml",
"FLORIL NF 0,03% SOL OFT EST x 8ml",
"FRAMIDEX NF SOL OFT EST x 2,5ml","HUMED 0,3% SOL OFT EST x 15ml.","MEGATOB SOL OFT EST x 5ml",
"SYSTALAN SOL OFT EST x 15ml","CLORINCORT - P  UNG OFT EST x 3.5g","TERRAMISOL - A UNG OFT EST x 6g"))
inei<-inei %>% group_by(artdes) %>% summarise(cantidad=sum(Unidades),soles=sum(Soles)) %>% mutate(precio=soles/cantidad)
writeData(wb,"INEI",inei,startRow = 1,startCol = 1)
saveWorkbook(wb,file = paste0("sustentopreciosminsa",meselegido,".xlsx"),TRUE)
#-----------------------------------------------------------------#
#                      PRECIOS MINSA                              #
#-----------------------------------------------------------------#
# cargando paquetes
library(readr)
library(readxl)
library(dplyr)
library(tidyr)
library(lubridate)
library(writexl)
# install.packages("openxlsx")
library(openxlsx)
# leyendo paul
datapaul<-read_xlsx("Ventas Lansier 2022 DataPaul.xlsx",sheet = "datapaul",
col_types = c("numeric","numeric","text","numeric","text","text","text","text","text","text",
"numeric","numeric","numeric","numeric","numeric","numeric","text","text","text","text",
"text","numeric","numeric","text","numeric","text","text","text","text","numeric"
,"text","text"))
# datapaul<-read_xlsx("Ventas Lansier 2022 DataPaul.xlsx",sheet = "datapaul")
# seleccionando el periodo del mes anterior para hacer los precios minsa
# datapaul<-datapaul %>% filter(periodo==paste0(substr(today(),0,4) ,ifelse( month(today())-1<10,paste0("0",month(today())-1),month(today())-1 )))
# seleccionando un mes cualquiera a elección, se debe cambiar el "202201" por la fecha deseada, solo escribir y correr ese códigO
# MES QUE DESEAMOS SU SUSTENTO PRECIOS MINSA
# ESCRIBIR EN VEZ DE LA FECHA QUE ESTA AQUI DEBAJO
#------------------------------------------#
meselegido=202201
#------------------------------------------#
datapaul<-datapaul %>% filter(periodo==meselegido)
# seleccionando distribuidores porque es lo unico que nos importa para precios minsa
datapaul<-datapaul %>% filter(tipocl=="DISTRIBUIDORES")
datapaul<-datapaul %>% filter(codart!="NA")
a<-datapaul %>% group_by(codart,artdes,codclie,clienom,idfactura) %>% summarise(Unidades=sum(cant),Soles=sum(subtotal))
a<-a %>% filter(codart!="TEXTO")
# ELIMINANDO PRODUCTOS COVID
a<-a %>% filter(!(codart %in% c("VESOGVT001","VESOGVT002","VESOTR001","VESOTR002","VESOTR003","VESOTR004")))
a<-a %>% filter(clienom!="METRONIC SAC")
a<-a %>% filter(clienom!="Cuota")
# creando el precio
a<-a %>% mutate(Precio=Soles/Unidades)
# redondeando a 3 digitos porque ellos quieren que esté asi
a$Precio<-round(a$Precio,digits = 3)
a$Soles<-round(a$Soles,digits = 3)
# ordenando por artdes
a<-a %>% arrange(artdes,-Precio)
# con esto evitamos que se repitan los clientes por producto
a<-a %>% distinct(codart,.keep_all = TRUE)
# ahora hacer una columna con el mayor, menor y media de precio por producto
maximo<-a %>% group_by(artdes) %>% summarise(Maximo=max(Precio))
minimo<-a %>% group_by(artdes) %>% summarise(Minimo=min(Precio))
promedio<-a %>% group_by(artdes) %>% summarise(Media=mean(Precio))
# uniendo los valores hallados con la data original
a<-merge(a,maximo,by = "artdes",all.x = TRUE)
a<-merge(a,minimo,by = "artdes",all.x = TRUE)
a<-merge(a,promedio,by = "artdes",all.x = TRUE)
# redondeando a 3 digitos los valores hallados
a$Maximo<-round(a$Maximo,digits = 3)
a$Minimo<-round(a$Minimo,digits = 3)
a$Media<-round(a$Media,digits = 3)
# RECORDAR QUE NO DEBEN HABER PRODUCTOS COVID AQUI
# HASTA AQUI GENERAMOS EL FORMATO QUE SIRVE PARA PRECIOS MINSA Y PRECIOS PRODUCCIÓN
# write_xlsx(a,"sustentopreciosminsa.xlsx")
# con esto descubrimos cual es el numero de fila para el primer ejemplar de cada producto
filasbordear<-1
for (i in 1:nrow(maximo)) {
filasbordear[i]<-which(a$artdes %in% maximo$artdes[i] , arr.ind = TRUE)[1]
}
wb <- openxlsx::createWorkbook()
addWorksheet(
wb = wb,
sheetName = "Preciosminsa"
)
rangeRows=filasbordear
rangecols=1:11
insideBorders <- openxlsx::createStyle(
border = c( "bottom"),
borderStyle = "thin"
)
openxlsx::addStyle(
wb = wb,
sheet = "Preciosminsa",
style = insideBorders,
rows = rangeRows,
cols = rangecols,
gridExpand = TRUE
)
writeData(wb,"Preciosminsa",a,startRow = 1,startCol = 1)
#----------------------------------------------------------------#
#                        PRECIOS PRODUCCIÓN                      #
#----------------------------------------------------------------#
# creando hoja INEI
addWorksheet(
wb = wb,
sheetName = "INEI"
)
# quitando espacios delante y detrás
a$clienom<-trimws(a$clienom,"both")
a$artdes<-trimws(a$artdes,"both")
# SELECCIONANDO SOLO LA CADENA
inei<-a %>% filter(clienom %in% c("BOTICAS Y SALUD S.A.C.","CORPORACION BOTICAS PERU S.A.C.","DROGUERIA INRETAIL PHARMA S.A.C.","INRETAIL PHARMA S.A."))
# seleccionando solo los productos elegidos para el formulario inei
inei<-inei %>% filter(artdes %in% c("BIOTEARS SOL OFT EST x 15ml","COSOMIDOL SOL OFT ESTl x 5ml","FLORIL NF 0,03% SOL OFT EST x 15ml",
"FLORIL NF 0,03% SOL OFT EST x 8ml",
"FRAMIDEX NF SOL OFT EST x 2,5ml","HUMED 0,3% SOL OFT EST x 15ml.","MEGATOB SOL OFT EST x 5ml",
"SYSTALAN SOL OFT EST x 15ml","CLORINCORT - P  UNG OFT EST x 3.5g","TERRAMISOL - A UNG OFT EST x 6g"))
inei<-inei %>% group_by(artdes) %>% summarise(cantidad=sum(Unidades),soles=sum(Soles)) %>% mutate(precio=soles/cantidad)
writeData(wb,"INEI",inei,startRow = 1,startCol = 1)
saveWorkbook(wb,file = paste0("sustentopreciosminsa",meselegido,".xlsx"),TRUE)
# leyendo paul
datapaul<-read_xlsx("Ventas Lansier 2022 DataPaul.xlsx",sheet = "datapaul",
col_types = c("numeric","numeric","text","numeric","text","text","text","text","text","text",
"numeric","numeric","numeric","numeric","numeric","numeric","text","text","text","text",
"text","numeric","numeric","text","numeric","text","text","text","text","numeric"
,"text","text"))
# MES QUE DESEAMOS SU SUSTENTO PRECIOS MINSA
# ESCRIBIR EN VEZ DE LA FECHA QUE ESTA AQUI DEBAJO
#------------------------------------------#
meselegido=202201
datapaul %>% filter(periodo==meselegido)
datapaul %>% filter(periodo=="202201")
datapaul<-datapaul %>% filter(periodo==meselegido)
# seleccionando distribuidores porque es lo unico que nos importa para precios minsa
datapaul<-datapaul %>% filter(tipocl=="DISTRIBUIDORES")
datapaul<-datapaul %>% filter(codart!="NA")
a<-datapaul %>% group_by(codart,artdes,codclie,clienom,idfactura) %>% summarise(Unidades=sum(cant),Soles=sum(subtotal))
a<-a %>% filter(codart!="TEXTO")
# ELIMINANDO PRODUCTOS COVID
a<-a %>% filter(!(codart %in% c("VESOGVT001","VESOGVT002","VESOTR001","VESOTR002","VESOTR003","VESOTR004")))
a<-a %>% filter(clienom!="METRONIC SAC")
a<-a %>% filter(clienom!="Cuota")
# creando el precio
a<-a %>% mutate(Precio=Soles/Unidades)
# redondeando a 3 digitos porque ellos quieren que esté asi
a$Precio<-round(a$Precio,digits = 3)
a$Soles<-round(a$Soles,digits = 3)
# ordenando por artdes
a<-a %>% arrange(artdes,-Precio)
# con esto evitamos que se repitan los clientes por producto
a<-a %>% distinct(codart,.keep_all = TRUE)
# leyendo paul
datapaul<-read_xlsx("Ventas Lansier 2022 DataPaul.xlsx",sheet = "datapaul",
col_types = c("numeric","numeric","text","numeric","text","text","text","text","text","text",
"numeric","numeric","numeric","numeric","numeric","numeric","text","text","text","text",
"text","numeric","numeric","text","numeric","text","text","text","text","numeric"
,"text","text"))
# MES QUE DESEAMOS SU SUSTENTO PRECIOS MINSA
# ESCRIBIR EN VEZ DE LA FECHA QUE ESTA AQUI DEBAJO
#------------------------------------------#
meselegido=202201
datapaul<-datapaul %>% filter(periodo==meselegido)
# seleccionando distribuidores porque es lo unico que nos importa para precios minsa
datapaul<-datapaul %>% filter(tipocl=="DISTRIBUIDORES")
datapaul<-datapaul %>% filter(codart!="NA")
a<-datapaul %>% group_by(codart,artdes,codclie,clienom,idfactura) %>% summarise(Unidades=sum(cant),Soles=sum(subtotal))
a<-a %>% filter(codart!="TEXTO")
# ELIMINANDO PRODUCTOS COVID
a<-a %>% filter(!(codart %in% c("VESOGVT001","VESOGVT002","VESOTR001","VESOTR002","VESOTR003","VESOTR004")))
a<-a %>% filter(clienom!="METRONIC SAC")
a<-a %>% filter(clienom!="Cuota")
# creando el precio
a<-a %>% mutate(Precio=Soles/Unidades)
# redondeando a 3 digitos porque ellos quieren que esté asi
a$Precio<-round(a$Precio,digits = 3)
a$Soles<-round(a$Soles,digits = 3)
# ordenando por artdes
a<-a %>% arrange(artdes,-Precio)
# con esto evitamos que se repitan los clientes por producto
b<-a %>% distinct(codart,.keep_all = TRUE)
# con esto evitamos que se repitan los clientes por producto
b<-a %>% distinct(clienom,.keep_all = TRUE)
# con esto evitamos que se repitan los clientes por producto
b<-a %>% distinct(clienom,.keep_all = TRUE)
# con esto evitamos que se repitan los clientes por producto
b<-a %>% distinct(artdes,.keep_all = TRUE)
# con esto evitamos que se repitan los clientes por producto
b<-a %>% distinct(subtotal,.keep_all = TRUE)
# con esto evitamos que se repitan los clientes por producto
b<-a %>% distinct(Soles,.keep_all = TRUE)
# con esto evitamos que se repitan los clientes por producto
b<-a %>% distinct(clienom,.keep_all = TRUE)
# con esto evitamos que se repitan los clientes por producto
b<-a %>% distinct(codart,.keep_all = TRUE)
# paquetes utilizados
library(RODBC)
library(dplyr)
library(lubridate)
library(writexl)
library(readxl)
# conexion al sql
sqlcomercial<-odbcConnect("SQLansier",uid = "lv",pwd = "lv.2014c")
# trayendo la data de los dos ultimos años de lansier
lansier<-sqlQuery(sqlcomercial,"[dbo].[STARSOFT_LISTA_VENTAS]")
# summary(lansier)
# unique(lansier$Periodo)
# unique(lansier$TipoCl)
# unique(lansier$artdes)
# unique(lansier$clienom)
# unique(lansier$DscZona)
# unique(lansier$dscven)
# unique(lansier$ColorEqui)
# unique(lansier$Fecha)
# nos quedamos solo con el periodo actual
lansier<-lansier %>% filter(Periodo==max(lansier$Periodo))
# quitamos espacios delante y detras al artdes
lansier$artdes<-trimws(lansier$artdes,which = "both")
# quitamos los dobles espacios que hay entre palabras
lansier$artdes<-gsub("\\s+"," ",lansier$artdes)
# quitamos los simbolos feos producidos por las tildes y las convertimos a tildes nuevamente
lansier$artdes<-iconv(lansier$artdes,from = "UTF-8",to = "latin1")
lansier$clienom<-iconv(lansier$clienom,from = "UTF-8",to = "latin1")
lansier$dscven<-iconv(lansier$dscven,from = "UTF-8",to = "latin1")
# cambiamos el formato de la fecha para que no aparezcan las horas
lansier$Fecha<-paste0(ifelse(day(lansier$Fecha)<10,paste0(0,day(lansier$Fecha)),day(lansier$Fecha)),
"/",
ifelse(month(lansier$Fecha)<10,paste0(0,month(lansier$Fecha)),month(lansier$Fecha))  ,
"/",
year(lansier$Fecha))
#----------------- PAUL VENTAS CARPETA COMPARTIDA ----------------#
# eliminamos del tipocl aquellas que son vacías
paulventas<-lansier %>% filter(TipoCl!=" ")
write_xlsx(paulventas,"paulventas.xlsx")
#------------------------ DASHBOARD-LANSIER ----------------------#
# para el dashboard solo nos interesa el canal privado
lansier<-lansier %>% filter(TipoCl=="DISTRIBUIDORES")
# eliminar productos covid "NOXAL 6 MG/ML X 10ML SOLUCIÃ“N ORAL GOTAS"
lansier<-lansier %>% filter(artdes!="NOXAL 6 MG/ML X 10ML SOLUCIÓN ORAL GOTAS")
# cruzando data
lansier<-lansier %>% mutate(FUENTE="LANSIER")
# CREANDO PERIODO PARA ESTE MES
lansier<-lansier %>% mutate(periodo=paste0("01/",
ifelse(month(today())<10,paste0("0",month(today())),month(today())),
"/",
year(today())))
# insertando columna ELIMINAR en vacio
lansier<-lansier %>% mutate(ELIMINAR="")
# creando columna DSCZONA
lansier<-lansier %>% mutate(DSCVEND="")
# creando ppuni ppsol flag dpto dist prov que estaran vacias
lansier<-lansier %>% mutate(ppuni="") %>% mutate(ppsol="") %>% mutate(flag="")
lansier<-lansier %>%
select(FUENTE,periodo,IdFactura,Fecha,codclie,ELIMINAR,
clienom,tipoCondi,artdes,
Cant,SubTotal,DscZona,dscven,ppuni,ppsol,flag)
# identificando donde marcar con E en ELIMINAR
castillo<-which(lansier$clienom== "REPRESENTACIONES CASTILLO S. A.", arr.ind=TRUE)
mym<-which(lansier$clienom== "M & M  PROD. MED. Y FARMACEUTICOS  E.I.R.L", arr.ind=TRUE)
difarlib<-which(lansier$clienom== "DISTRIB. FARMACEUTICA LA LIBERTAD S.R.L.", arr.ind=TRUE)
# marcando con E
lansier$ELIMINAR[castillo]="E"
lansier$ELIMINAR[mym]="E"
lansier$ELIMINAR[difarlib]="E"
# LEYENDO DATA NECESARIA PARA VALIDAR
maestrolansier <- read_xlsx("maestrolansier.xlsx")
# selecciono solo lo que voy a querer de maestro lansier que para este caso seria DIMEXA artdesvalid tipo y equipo
df2<-maestrolansier %>% select(LANSIER,`artdsc VALID`,TIPO,equipo)
# cambio el nombre a df2 para que coincida el nombre de la columna articulo para poder hacer el merge
colnames(df2)<-c("artdes","artdesvalid","tipo","equipo")
# QUITO ESPACIOS DELANTE Y DETRAS DEL MAESTROLANSIER
df2$artdes<-trimws(df2$artdes,"b")
df2$artdesvalid<-trimws(df2$artdesvalid,"b")
# antes de cruzar debemos validar que esten los mismo productos y cuales no reconoce
productosnuevoslansier<-lansier[!lansier$artdes %in% df2$artdes,]
write_xlsx(productosnuevoslansier,"productosnuevoslansier.xlsx")
# son productos de lansier
# EN UN INICIO data_maestro daba un numero diferente de filas a lansier y esto era porque en el maestrolansier habian nombres que se repetian
# no pueden repetirse nombre o al cruzar duplicará esas observaciones
data_maestro<-merge(x = lansier, y = df2, by.x = "artdes", all.x = TRUE)
# ahora cruzando con vendedores
vendedoresdimexa<-read_xlsx("vendedoresdimexa.xlsx")
vendedoresdimexa<-vendedoresdimexa %>% select(ruc,flag)
colnames(vendedoresdimexa)<-c("codclie","DSCVEND")
# quitando los espacios en blanco delante y detras
data_maestro$codclie<-trimws(data_maestro$codclie,"b")
vendedoresdimexa$codclie<-trimws(vendedoresdimexa$codclie,"b")
# combinando y validando con la data de vendedoresdimexa para traer el dscvend o flag como esta en vendedoresdimexa
data_maestro_vendedores<-merge(data_maestro,vendedoresdimexa,by.x = "codclie",all.x = TRUE)
# dandole orden a nuestro excel
data_maestro_vendedores<-data_maestro_vendedores %>%
select(FUENTE,periodo,IdFactura,Fecha,codclie,ELIMINAR,
clienom,tipoCondi,artdes,artdesvalid,
Cant,SubTotal,DSCVEND,DscZona,dscven,tipo,equipo,ppuni,ppsol,flag)
# eliminamos las filas que tienen subtotal igual a cero
zerosubtotal<-which(data_maestro_vendedores$SubTotal== 0, arr.ind=TRUE)
data_maestro_vendedores<-data_maestro_vendedores[-zerosubtotal,]
write_xlsx(data_maestro_vendedores,"lansierdashboard.xlsx")
# limpiando nuestra ventana
rm(list=ls())
# gracias a este paquete pude leer el excel, ya que de otra forma no podia
# install.packages("XLConnect")
# install.packages("lookup")
# install.packages("plyr")
# install.packages("qdapTools")
library(qdapTools)
library(plyr)
library(lookup)
library(XLConnect)
library(dplyr)
library(readxl)
library(writexl)
library(RODBC)
data <- readWorksheetFromFile(paste0("C:\\Users\\LBarrios\\Downloads\\FacMet_",
year(today()),
ifelse(month(today())<10,paste0("0",month(today())),month(today())) ,
ifelse(day(today())<10,paste0("0",day(today())),day(today())),".xls"),
sheet = "FacturacionMetronic",
startRow = 6,
startCol = 1)
# retirando las columnas que eran merge de las otras
data<-data %>% select(-Col6,-Col12)
# seleccionando data para CIERRE DE MES ANTERIOR
# data<-data %>% filter(Periodo==paste0(year(today()),
#                                       ifelse(month(today())<10,paste0("0",month(today())-1),month(today()))))
# seleccionando data del periodo ACTUAL
data<-data %>% filter(Periodo==paste0(year(today()),
ifelse(month(today())<10,paste0("0",month(today())),month(today()))))
# borrando los valores de articulo iguales a productos covid
data<-data %>% filter(!(Artículo %in%
c("VESOGVT001","VESOGVT002","VESOTR001","VESOTR002","VESOTR003","VESOTR004","VEDMLN001")))
# borrando de columna Vendedor = OFICINA
data<-data %>% filter(!(Vendedor %in% c("OFICINA")))
# creando columna fuente que diga METRONIC
data<-data %>% mutate(FUENTE="METRONIC")
# creando columna periodo con el primer dia del mes a actualizar
data<-data %>% mutate(periodo=paste0("01/",
ifelse(month(today())<10,paste0("0",month(today())),month(today())),
"/",year(today())))
# insertando columna ELIMINAR en vacio
data<-data %>% mutate(ELIMINAR="")
# creando columna DSCZONA
data<-data %>% mutate(DSCZONA="")
# creando ppuni ppsol flag dpto dist prov que estaran vacias
data<-data %>% mutate(ppuni="") %>% mutate(ppsol="") %>% mutate(flag="") %>% mutate(dpto="") %>% mutate(dist="") %>% mutate(prov="")
# seleccionando solo las columnas que nos interesan
# DATA2 TIENE EL FORMATO QUE SE CARGARIA AL SQL
data2<-data %>%
select(FUENTE,periodo,Nro.Doc,Fecha,Ruc,ELIMINAR,Cliente,Condición,Artículo,Cant,Subtotal,DSCZONA,Zona,Vendedor,ppuni,ppsol,flag,dpto,dist,prov)
# con esto leo el maestro lansier con el cual cruzare mi data
maestrolansier <- read_xlsx("maestrolansier.xlsx")
# aqui selecciono lo que voy a cruzar
# df1<-data2 %>% select(Articulo)
df2<-maestrolansier %>% select(METRONIC,`artdsc VALID`,TIPO,equipo)
# con esto quito los espacios adelante y detrÃ¡s del artdesvalid Y LOS ARTICULOS
# df1$ArtÃ­culo<-trimws(df1$ArtÃ­culo,"b")
# df2$ArtÃ­culo<-trimws(df2$ArtÃ­culo,"b")
# df2$artdesvalidvalid<-trimws(df2$artdesvalidvalid,"b")
# cambio el nombre a df2 para que coincida el nombre de la columna articulo para poder hacer el merge
colnames(df2)<-c("Artículo","artdesvalid","tipo","equipo")
# # probando el mismo proceso pero directamente para data 2 y ya no para df1
data2$Artículo<-trimws(data2$Artículo,"b")
data2$Artículo<-trimws(data2$Artículo,"b")
df2$artdesvalid<-trimws(df2$artdesvalid,"b")
# cruzando para obtener los validados, tipo y equipo
# probando si hay productos diferentes
productosnuevosmetronic<-data2[!data2$Artículo %in% df2$Artículo,]
write_xlsx(productosnuevosmetronic,"productosnuevosmetronic.xlsx")
#
ArtdesValid2<-merge(x = data2, y = df2, by.x = "Artículo", all.x = TRUE)
data3<-ArtdesValid2 %>%
select(FUENTE,periodo,Nro.Doc,Fecha,Ruc,ELIMINAR,Cliente,Condición,Artículo,artdesvalid,Cant,Subtotal,DSCZONA,Zona,Vendedor,tipo,equipo,ppuni,ppsol,flag,dpto,dist,prov)
# creando el excel con la data ya formateada
# es fundamental utilizar la funcion write_xlsx ya que esta nos permite sobre escribir el excel sin tener que borrarlo previamente
write_xlsx(data3,"metronic.xlsx")
# LISTO TERMINADO
#------------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------#
# ------------ con trimws puedo quitar los espacios iniciales y finales de un texto --------- #
#---------------------------------------------------------------------------------------------#
# x<- "  texto con espacios "
# trimws(x,"b")
# x<-c(" asds ", " asdasdas","sdasdas ","    asdasd  asd   asd    ","  asdsa  2  ")
# trimws(x,"b")
rm(list = ls())
